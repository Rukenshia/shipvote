image: ubuntu/18.10 
packages:
  - git
  - postgresql
  - jq
  - nodejs
  - python
  - python-pip
  - awscli
sources:
  - https://git.sr.ht/~rukenshia/shipvote
secrets:
  - 39526075-910f-4eef-98f4-bfa9788aec0f
  - 1ae5be86-eab3-49fd-be80-3aebd4e33db4
  - a682a54f-005d-4306-bbd0-2d825243e4eb
  - 0ea9acdb-4117-4068-bc2c-107bdba5c026
  - 9608b36c-e6e0-4a60-8c78-ff89e5d201fa
  - aec48a53-0c38-4386-979f-40affe39a77f
environment:
  MIX_ENV: test
tasks:
  - setup: |
      sudo apt install -yq npm
      wget -q https://packages.erlang-solutions.com/erlang/esl-erlang/FLAVOUR_1_general/esl-erlang_21.3.7-1~ubuntu~cosmic_amd64.deb
      sudo apt install -yq ./esl-erlang_21.3.7-1~ubuntu~cosmic_amd64.deb
      rm esl-erlang_21.3.7-1~ubuntu~cosmic_amd64.deb

      wget -q https://packages.erlang-solutions.com/erlang/elixir/FLAVOUR_2_download/elixir_1.8.1-2~ubuntu~cosmic_amd64.deb
      sudo apt install -yq ./elixir_1.8.1-2~ubuntu~cosmic_amd64.deb
      rm elixir_1.8.1-2~ubuntu~cosmic_amd64.deb

      sudo update-locale LANG=C.UTF-8
      sudo service postgresql start
      sudo su - postgres -c 'createdb shipvote'
      sudo -u postgres psql -c "alter user postgres with password 'postgres';"
  - test: |
      cd shipvote/backend
 
      mix local.hex --force
      mix local.rebar --force
      mix deps.get
      mix test --cover
  - package: |
      cd shipvote/backend
      mv ~/.prod.secret.exs config/prod.secret.exs
      MIX_ENV=prod mix compile
      cd assets
      npm ci --no-progress
      npm run deploy
      cd ..
      mix phx.digest

      MIX_ENV=prod mix release --env=prod
  - upload: |
      set +x
      source ~/.shipvote.artifacts
      set -x

      aws s3 cp shipvote/backend/_build/prod/rel/backend/releases/*/backend.tar.gz s3://shipvote.artifacts/backend.tar.gz
  - deploy: |
      echo "not reimplemented yet"
      # Retrieve currently deployed instances
      #set +x
      #ips="$(curl -H "Authorization: Bearer $(cat ~/.digitalocean_api_key)" "https://api.digitalocean.com/v2/droplets?tag_name=tier:web" | jq -r '.droplets[].networks.v4[0].ip_address')"
      #set -x

      #for ip in $ips; do
        #ssh-keyscan -t rsa $ip >> known_hosts
        #ssh -o "UserKnownHostsFile=known_hosts" -i ~/.ssh/deploy root@$ip < shipvote/backend/scripts/deploy.sh
      #done
triggers:
  - action: email
    condition: always
    to: "Jan Christophersen <jan@chrstphrsn.cc>"
