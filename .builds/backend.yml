image: ubuntu/lts
packages:
  - git
  #- postgresql
  - jq
  - nodejs
  - awscli
  - curl
  - unzip
  - zip
sources:
  - https://git.sr.ht/~rukenshia/shipvote
secrets:
  - 39526075-910f-4eef-98f4-bfa9788aec0f
  - 1ae5be86-eab3-49fd-be80-3aebd4e33db4
  - 0ea9acdb-4117-4068-bc2c-107bdba5c026
  - 9608b36c-e6e0-4a60-8c78-ff89e5d201fa
  - ea505052-248b-48e9-8185-82519aa7fa01
  - 1832b31e-e954-415c-b49d-5e0421875440
environment:
  MIX_ENV: test
tasks:
  - check-build: |
      set +e 
      # Check if we even want a build
      cd shipvote

      git log -1 --pretty=%B | grep '\[backend skip\]'
      if [ "$?" -eq "0" ]; then
        echo "Skiping backend build as requested in commit"
        complete-build
      fi
      set -e
  - setup: |
      #sudo apt install -yq npm

      #erlang_version="22.2.6-1"
      #elixir_version="1.10.1-1"

      #wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add -
      #echo "deb https://packages.erlang-solutions.com/ubuntu focal contrib" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
      #sudo apt -q update
      #sudo apt -yq install erlang elixir

      wget https://releases.hashicorp.com/packer/1.4.1/packer_1.4.1_linux_amd64.zip
      unzip packer_1.4.1_linux_amd64.zip
      rm packer_1.4.1_linux_amd64.zip
      chmod +x ./packer
      sudo mv ./packer /usr/bin/packer

      sudo update-locale LANG=C.UTF-8
      #sudo service postgresql start
      #sudo su - postgres -c 'createdb shipvote'
      #sudo -u postgres psql -c "alter user postgres with password 'postgres';"
  #- test: |
      #cd shipvote/backend
 
      #mix local.hex --force
      #mix local.rebar --force
      #mix deps.get
      #mix deps.compile appsignal --include-children
      #mix test --cover
  - prepare-packer: |
      cd shipvote/backend
      mv ~/.prod.secret.exs config/prod.secret.exs
  - packer: |
      set +x
      source ~/.shipvote.aws.builds.sr.ht
      set -x

      cd shipvote/infra

      # Output the current revision for AppSignal
      echo "APP_REVISION=$(git rev-parse --short HEAD)" >> shipvote.env

      packer build ami.json
  - deploy: |
      set +x
      source ~/.shipvote.aws.builds.sr.ht
      set -x

      cd shipvote/infra

      export AWS_DEFAULT_REGION=eu-central-1
      export NEW_AMI="$(cat manifest.json | jq -r '.builds[0].artifact_id' | awk -F':' '{print $2}')"
      export NEW_SNAPSHOT_ID="$(aws ec2 describe-snapshots --owner-ids self --filter Name=tag:app,Values=shipvote Name=tag:tier,Values=web --query 'Snapshots[0].SnapshotId' --output text)"

      ./deploy.sh
triggers:
  - action: email
    condition: always
    to: "Jan Christophersen <jan@chrstphrsn.cc>"

